@model Accounting.Models.HomeViewModels.LatestPostViewModel

@{
  ViewData["Title"] = ConfigurationSingleton.Instance.ApplicationName;
}

<script src="~/js/vue-3-5-13.js" asp-append-version="true"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/styles/default.min.css">
<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/highlight.min.js"></script>

<!-- and it's easy to individually load additional languages -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/languages/go.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.9.0/languages/csharp.min.js"></script>
<script>hljs.highlightAll();</script>

@if (!User.Identity.IsAuthenticated)
{
  <div class="display-flex flex-direction-column">
    <div class="flex-1 display-flex flex-direction-column margin-bottom-5px">
      @* <img class="width-100 margin-bottom-5px" src="~/images/cat.png" /> *@
      <video loop="loop" artist="Brandon - Steel" class="width-100 margin-bottom-5px" src="~/videos/firefox_08yuMQrwtC.mp4" controls></video>
      <div class="padding-5px flex-1 color-white background-color-black font-Roboto-Mono">
        <div class="text-align-center">
          Универсальная Система Администрирования (УСА) с журналом (debit/credit) для моделирования финансовых операций.
        </div>
      </div>
    </div>
    <div class="width-5px"></div>
    <div class="flex-1 display-flex flex-direction-column">
      <div id="app" class="width-100"></div>
      <div class="display-flex flex-direction-column flex-1 background-color-black margin-bottom-5px">
        <div class="display-flex flex-direction-column flex-1">
          <div class="flex-1"></div>
          <div class="text-align-center color-red font-Oswald font-size-40px">99%<span class="color-white">*</span></div>
          <div class="flex-1"></div>
        </div>
        <div class="text-align-center color-white font-Roboto-Mono">Пусть упиваются капиталисты своими капиталистическими системами. Мы будем делать бухгалтерию доступную для всех. Где каждый человек превращается в номер.<br /><br />Model any financial operation.<span class="blinking-cursor color-lawngreen">█</span></div>
        <div class="flex-1 margin-bottom-5px padding-sides-5px">
          <div class="display-flex margin-top-5px">
            <div class="flex-1 color-white text-align-center border-1px-dotted-lawngreen">
              <div class="font-size-30px">Free</div>
              <div class="font-Roboto-Mono"><a href="https://github.com/denys-olleik/alternative-accounting/issues" class="color-white">limited support <br /> must attribute</a></div>
            </div>
            <div class="width-5px"></div>
            <div class="flex-1 color-white text-align-center border-1px-dotted-lawngreen">
              <div class="font-size-30px">Private</div>
              <div class="font-Roboto-Mono">pay 1oz of gold coin</div>
            </div>
          </div>
        </div>
        <div class="flex-1 padding-sides-5px">
          <div class="display-flex">
            <div class="flex-1 color-white text-align-center border-1px-dotted-yellow">
              <div class="font-size-30px">Public</div>
              <div class="font-Roboto-Mono">pay 100oz</div>
            </div>
            <div class="width-5px"></div>
            <div class="flex-1 color-white text-align-center border-1px-dotted-yellow">
              <div class="font-size-30px">Bank</div>
              <div class="font-Roboto-Mono">pay 200oz</div>
            </div>
          </div>
        </div>
        <div class="flex-1 padding-sides-5px text-align-center color-white font-size-16px">
          <p class="font-Roboto-Mono">Easy to white-label and self-host.</p>
          <div class="display-flex">

            <div class="flex-1 color-white text-align-center border-1px-dotted-red">
              <div class="font-size-30px">Government</div>
              <div class="font-Roboto-Mono">pay 1 g/mi² every ten years</div>
            </div>
          </div>
        </div>
        <div class="color-white font-Roboto-Mono text-align-center">* 1% is your responsibility.</div>
      </div>
    </div>
  </div>
}

@if (!User.Identity.IsAuthenticated)
{
  <div class="display-flex margin-bottom-5px">
    <div class="flex-1 background-color-A62626 text-align-center">
      <a href="https://github.com/denys-olleik/alternative-accounting" class="font-Oswald color-white font-size-40px">source</a>
    </div>
    @*  <div class="width-5px"></div>
    <div class="flex-1 background-color-A62626 text-align-center">
      <a asp-action="Register" asp-controller="Registration" class="font-Oswald color-white font-size-40px">demo</a>
    </div> *@
  </div>

  <div class="background-color-antiquewhite padding-10px font-Roboto-Mono margin-bottom-5px">
    <p>Events with a very small probability have to be considered seriously. They could have major implications.</p>
    <br />
    <img class="width-100 margin-bottom-5px" src="~/images/intuit.png" />
  </div>
}

@if (User.Identity.IsAuthenticated)
{
  <div class="background-color-antiquewhite">
    <ul class="margin-0">
      <li>
        <a href="@Url.Action("Reserve", "Reserve")">Reserves 🟨</a>
        <ul>
          <li>
            <a href="@Url.Action("Deposit", "Reserve")">Deposit 🟨</a>
          </li>
          <li>
            <a href="@Url.Action("Withdraw", "Reserve")">Withdraw 🟧</a>
          </li>
          <li>
            <a href="@Url.Action("Withdraw", "Reserve")">Monetizations 🟧</a>
          </li>
        </ul>
      </li>
      <li>
        <a href="@Url.Action("Journal", "Journal")">Journal 🟨</a>
      </li>
      <li>
        <a href="@Url.Action("Update", "Organization")">Organization 🟩</a>
      </li>
      <li>
        <a href="@Url.Action("Users", "User")">Users 🟩 </a>
        <ul>
          <li>
            <a href="@Url.Action("Create", "User")">Create user 🟩 </a>
          </li>
        </ul>
      </li>
      <li>
        <a href="@Url.Action("Tasks", "Task")">Project management 🟧</a>
        <ul>
          <li>
            <a href="@Url.Action("Create", "Task")">Create task 🟧</a>
          </li>
        </ul>
      </li>
      <li>
        <a href="@Url.Action("Invoices", "Invoice")">Invoices 🟩 </a>
        <ul>
          <li>
            <a href="@Url.Action("Create", "Invoice")">Create invoice 🟩 </a>
          </li>
        </ul>
      </li>
      <li>
        <a href="@Url.Action("Customers", "Customer")">Customers and vendors 🟩 </a>
        <ul>
          <li>
            <a href="@Url.Action("Create", "Customer")">Create customer and or vendor 🟩 </a>
          </li>
        </ul>
      </li>
      <li>
        <a href="@Url.Action("PaymentTerms", "PaymentTerm")">Payment terms 🟩 </a>
        <ul>
          <li>
            <a href="@Url.Action("Create", "PaymentTerm")">Create payment term 🟩 </a>
          </li>
        </ul>
      </li>
      <li>
        <a href="@Url.Action("Taxes", "Tax")">Taxes 🟧</a>
        <ul>
          <li>
            <a href="@Url.Action("Create", "Tax")">Create tax 🟧</a>
          </li>
        </ul>
      </li>
      <li>
        <a href="@Url.Action("Items", "Item")">Items 🟨</a>
        <ul>
          <li>
            <a href="@Url.Action("Create", "Item")">Create item 🟧</a>
          </li>
        </ul>
      </li>
      <li>
        <a href="@Url.Action("Locations", "Location")">Locations 🟧</a>
        <ul>
          <li>
            <a href="@Url.Action("Create", "Location")">Create location 🟩</a>
          </li>
        </ul>
      </li>
      <li>
        <a href="@Url.Action("Reconciliations", "Reconciliation")">Reconciliations 🟩</a>
      </li>
      <li>
        <a href="@Url.Action("Accounts", "Account")">Accounts 🟩</a>
        <ul>
          <li>
            <a href="@Url.Action("Create", "Account")">Create account 🟩</a>
          </li>
        </ul>
      </li>
      <li>
        <a href="@Url.Action("Blogs", "Blog")">Blog 🟩 </a>
        <ul>
          <li>
            <a href="@Url.Action("Create", "Blog")">Create post 🟩 </a>
          </li>
        </ul>
      </li>
      <li>
        <a href="@Url.Action("Tenants", "Tenant")">Tenants 🟩 </a>
        <ul>
          <li>
            <a href="@Url.Action("Secrets", "Secret")">Secrets 🟩 </a>
          </li>
        </ul>
      </li>
      <li>
        <a href="@Url.Action("UpdatePassword", "User")">Update password 🟩</a>
      </li>
      <li>
        <a href="@Url.Action("RequestLogs", "Diagnostics")">Request logs 🟩</a>
      </li>
      <li>
        <a href="@Url.Action("Exceptions", "Diagnostics")">Exceptions 🟩</a>
      </li>
    </ul>
  </div>
}

@if (User.Identity.IsAuthenticated)
{
  <div class="display-flex background-color-white">
    <div class="flex-1">
      <canvas id="accountBalanceChart" width="400" height="400"></canvas>
    </div>
    <div class="width-5px">
    </div>
    <div class="flex-1">
    </div>
  </div>
}

@if (User.Identity.IsAuthenticated)
{
  <script>
    (async () => {
      try {
        const response = await fetch(`${window.location.protocol}//${window.location.hostname}:${window.location.port ? window.location.port : ''}/api/r/get-account-balance-report`);
        const apiData = await response.json();

        const accountNumbers = apiData.map(item => item.name);
        const currentBalances = apiData.map(item => item.currentBalance);

        const ctx = document.getElementById('accountBalanceChart').getContext('2d');
        const myChart = new Chart(ctx, {
          type: 'bar',
          data: {
            labels: accountNumbers,
            datasets: [{
              label: 'Current Balance',
              data: currentBalances,
              backgroundColor: 'rgba(75, 192, 192, 0.2)',
              borderColor: 'rgba(75, 192, 192, 1)',
              borderWidth: 1
            }]
          }
        });
      } catch (error) {

      }
    })();
  </script>
}

<script>
  function updateTruncate3() {
    document.querySelectorAll('.truncate-3').forEach(el => {
      const full = el.dataset.full || el.textContent.trim();
      el.dataset.full = full;
      el.textContent = window.innerWidth < 768 ? full.slice(0,3) + '…' : full;
    });
  }
  window.addEventListener('resize', updateTruncate3);
  window.addEventListener('DOMContentLoaded', updateTruncate3);
</script>