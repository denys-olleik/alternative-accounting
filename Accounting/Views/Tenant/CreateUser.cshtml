@model Accounting.Models.TenantViewModels.CreateUserViewModel

@{
  ViewData["Title"] = "Create user - " + ConfigurationSingleton.Instance.ApplicationName;
}

<script src="~/js/vue-3-5-13.js" asp-append-version="true"></script>

@{
  string headerText = "Create user";
}

<partial name="_H1HeaderPartial" model="@headerText" />

<div class="display-flex margin-bottom-5px background-color-antiquewhite">
  <div>
    <a asp-action="TenantUsers" asp-controller="Tenant" asp-route-tenantId="@Model.TenantId" class="font-Roboto font-size-16px color-blue margin-left-20px">Tenant users</a>
  </div>
</div>

<form id="app"
      asp-action="CreateUser"
      asp-controller="Tenant"
      asp-route-tenantId="@Model.TenantId"
      method="post"
      class="display-flex flex-direction-column margin-bottom-5px">

  <input type="hidden" asp-for="SelectedOrganizationIdsCsv" :value="selectedOrganizationIds.join(',')" />

  <div class="display-flex flex-direction-column margin-bottom-5px">
    <label asp-for="Email" class="background-color-antiquewhite"></label>
    <input asp-for="Email"
           class="font-size-20px"
           maxlength="100" autocomplete="off"/>
  </div>

  <div class="display-flex">
    <div class="flex-1 display-flex flex-direction-column margin-bottom-5px">
      <label asp-for="FirstName" class="background-color-antiquewhite">First name</label>
      <input asp-for="FirstName"
             class="font-size-20px"
             maxlength="100" autocomplete="off"/>
    </div>
    <div class="width-5px"></div>
    <div class="flex-1 display-flex flex-direction-column margin-bottom-5px">
      <label asp-for="LastName" class="background-color-antiquewhite">Last name</label>
      <input asp-for="LastName"
             class="font-size-20px"
             maxlength="100" autocomplete="off"/>
    </div>
  </div>

  <div class="display-flex flex-direction-column margin-bottom-5px">
    <label asp-for="Password" class="background-color-antiquewhite">Password</label>
    <input asp-for="Password"
           class="font-size-20px"
           maxlength="100" autocomplete="off" type="password"/>
  </div>

  <div class="display-flex flex-direction-column margin-bottom-5px">
    <label asp-for="ConfirmPassword" class="background-color-antiquewhite">Confirm password</label>
    <input asp-for="ConfirmPassword"
           class="font-size-20px"
           maxlength="100" autocomplete="off" type="password" />
  </div>

  <div class="margin-bottom-5px background-color-antiquewhite">
    <label>Available organizations:</label>
    <div class="display-flex flex-direction-column margin-top-5px">
      <div v-for="organization in organizations" :key="organization.organizationID" class="display-flex flex-1 margin-bottom-5px">
        <input type="checkbox"
               :id="'org-' + organization.organizationID"
               :value="organization.organizationID"
               :checked="selectedOrganizationIds.includes(organization.organizationID.toString())"
               @@change="updateSelectedOrganizations" />
        <label :for="'org-' + organization.organizationID" class="margin-left-5px">{{ organization.name }}</label>
      </div>
    </div>
  </div>

  <div class="margin-bottom-5px background-color-antiquewhite">
    <label>Available roles:</label>
    <div class="display-flex flex-direction-column margin-top-5px">
      <div v-for="role in roles" :key="role" class="display-flex flex-1 margin-bottom-5px">
        <input type="checkbox"
               :id="'role-' + role"
               :value="role"
               :checked="selectedRoles.includes(role)"
               :disabled="!isRoleManager"
               @@change="updateSelectedRoles" />
        <label :for="'role-' + role" class="margin-left-5px">{{ role }}</label>
      </div>
    </div>
  </div>

  <button type="submit" class="full-width-regular-button">Create user</button>
</form>

@if (Model != null && Model.ValidationResult != null)
{
  foreach (var error in Model.ValidationResult.Errors)
  {
    <div>
      <small class="color-red">@error.ErrorMessage</small>
    </div>
  }
  <div class="margin-bottom-5px">
  </div>
}

<script>
  const { createApp } = Vue;

  const app = createApp({
    data() {
      return {
        organizations: @Html.Raw(Json.Serialize(Model.AvailableOrganizations)),
        roles: @Html.Raw(Json.Serialize(Model.AvailableRoles)),
        selectedOrganizationIds: @Html.Raw(Json.Serialize(Model.SelectedOrganizationIdsCsv?.Split(',') ?? [])),
        selectedRoles: @Html.Raw(Json.Serialize(Model.SelectedRoles ?? new List<string>())),
        isRoleManager: @User.IsInRole(Accounting.Common.UserRoleClaimConstants.RoleManager).ToString().ToLower()
      };
    },
    methods: {
      updateSelectedOrganizations(event) {
        const value = event.target.value;
        if (event.target.checked) {
          this.selectedOrganizationIds.push(value);
        } else {
          this.selectedOrganizationIds = this.selectedOrganizationIds.filter(id => id !== value);
        }
      }
    }
  });

  app.mount('#app');
</script>